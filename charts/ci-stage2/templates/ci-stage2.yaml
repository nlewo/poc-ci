apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  annotations:
    # To ignore failed taskruns when kapp redeploy this task
    kapp.k14s.io/disable-associated-resources-wait: ""
  name: ci-stage2
  namespace: tekton-pipelines
spec:
  inputs:
    params:
      - name: event
        type: string
      - name: repoName
        type: string
      - name: repoID
        type: string
    resources:
      - name: project-repo
        type: git
  steps:
    - name: generate-ci-values
      image: nixery.dev/shell/kubectl/yq/jq
      command: ["bash"]
      args:
        - "-ec"
        - |
          export RUN_ID=$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 5 | head -n1)

          echo '$(inputs.params.event)' > event.json

          echo "# Fetching secrets from secrets-$(inputs.params.repoName) namespace"
          kubectl get -o json secrets -n secrets-$(inputs.params.repoName) | jq -s '.[].items | map(select(.kind == "Secret") | {"\(.metadata.name)": .data}) | add | {secrets: .}' > secrets.json

          cat event.json secrets.json | jq -s 'add | {global: {ci: .}} * {global: {ci: {uid: env.RUN_ID}}}' | yq . -y > /workspace/ci-values.yaml

          cat /workspace/ci-values.yaml
    - name: template-user-pipeline
      image: nixery.dev/shell/kubernetes-helm
      command: ["bash"]
      workingDir: /workspace/project-repo/.tekton
      args:
        - "-ec"
        - |
          helm template . --values=/workspace/ci-values.yaml > rendered.yaml
          cat rendered.yaml
    - name: deploy-user-pipeline
      image: eonpatapon/kapp
      command: ["kapp"]
      workingDir: /workspace/project-repo/.tekton
      args:
        - deploy
        - -a
        - $(inputs.params.repoName)-$(inputs.params.repoID)
        - -f
        - rendered.yaml
        - -y
---
